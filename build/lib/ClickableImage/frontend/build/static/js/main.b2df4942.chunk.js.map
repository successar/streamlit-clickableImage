{"version":3,"sources":["ClickableImage.tsx","index.tsx"],"names":["ClickableImage","props","render","row_beams","render_rowbeams","col_beams","render_colbeams","viewBox","args","width","height","xmlns","href","src","marked","state","type","index","map","beam","x","y","fill","opacity","onClick","e","handler","strokeWidth","stroke","this","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"uOAiBMA,E,kDACF,WAAYC,GAAa,IAAD,8BACpB,cAAMA,IAGHC,OAAS,WACZ,IAAIC,EAAY,EAAKC,kBACjBC,EAAY,EAAKC,kBACrB,OACI,yBAAKC,QAAO,cAAS,EAAKN,MAAMO,KAAKC,MAAzB,YAAkC,EAAKR,MAAMO,KAAKE,QAAUC,MAAM,8BAC1E,2BAAOC,KAAM,EAAKX,MAAMO,KAAKK,IAAKJ,MAAO,EAAKR,MAAMO,KAAKC,MAAOC,OAAQ,EAAKT,MAAMO,KAAKE,SACvFP,EACAE,IAXW,EAgBjBD,gBAAkB,WACrB,IAAIU,EAAU,EAAKC,OAA4B,OAAnB,EAAKA,MAAMC,KAAiB,EAAKD,MAAME,MAAQ,KAC3E,OAAO,EAAKhB,MAAMO,KAAKL,UAAUe,KAAI,SAACC,EAAgBF,GAClD,OAAO,0BAAMG,EAAG,EAAGC,EAAGF,EAAK,GAAIV,MAAO,EAAKR,MAAMO,KAAKC,MAClDC,OAAQS,EAAK,GAAKA,EAAK,GAAIG,KAAK,OAAOC,QAAQ,OAC/CC,QAAS,SAAAC,GAAC,OAAI,EAAKC,QAAQ,MAAOT,IAAQU,YAAaV,GAASH,EAAS,IAAK,IAAKc,OAAO,cArB9E,EAyBjBtB,gBAAkB,WACrB,IAAIQ,EAAU,EAAKC,OAA4B,OAAnB,EAAKA,MAAMC,KAAiB,EAAKD,MAAME,MAAQ,KAC3E,OAAO,EAAKhB,MAAMO,KAAKH,UAAUa,KAAI,SAACC,EAAWF,GAC7C,OAAO,0BAAMG,EAAGD,EAAK,GAAIE,EAAG,EAAGX,OAAQ,EAAKT,MAAMO,KAAKE,OACnDD,MAAOU,EAAK,GAAKA,EAAK,GAAIG,KAAK,MAAMC,QAAQ,OAC7CC,QAAS,SAAAC,GAAC,OAAI,EAAKC,QAAQ,MAAOT,IAAQU,YAAaV,GAASH,EAAS,IAAK,IAAKc,OAAO,cA9B9E,E,2CAkCxB,SAAeZ,EAAcC,GACzBY,KAAKC,UACD,SAAAC,GAAS,MAAK,CAAE,KAAQf,EAAM,MAASC,MACvC,kBAAMe,IAAUC,kBAAkB,CAACjB,EAAMC,W,GAtCxBiB,KA2CdC,cAAwBnC,GCxDvCoC,IAASlC,OACP,kBAAC,IAAMmC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b2df4942.chunk.js","sourcesContent":["import {\n    Streamlit,\n    StreamlitComponentBase,\n    withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\n\ninterface State {\n    type: string,\n    index: number\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass ClickableImage extends StreamlitComponentBase<State> {\n    constructor(props: any) {\n        super(props);\n    }\n\n    public render = (): ReactNode => {\n        let row_beams = this.render_rowbeams();\n        let col_beams = this.render_colbeams();\n        return (\n            <svg viewBox={`0 0 ${this.props.args.width} ${this.props.args.height}`} xmlns=\"http://www.w3.org/2000/svg\">\n                <image href={this.props.args.src} width={this.props.args.width} height={this.props.args.height} />\n                {row_beams}\n                {col_beams}\n            </svg>\n        )\n    }\n\n    public render_rowbeams = () => {\n        let marked = (this.state && this.state.type == \"row\") ? this.state.index : null;\n        return this.props.args.row_beams.map((beam: number[], index: number) => {\n            return <rect x={0} y={beam[0]} width={this.props.args.width}\n                height={beam[1] - beam[0]} fill=\"blue\" opacity=\"0.25\"\n                onClick={e => this.handler(\"row\", index)} strokeWidth={index == marked ? \"2\": \"0\"} stroke=\"black\"/>\n        })\n    }\n\n    public render_colbeams = () => {\n        let marked = (this.state && this.state.type == \"col\") ? this.state.index : null;\n        return this.props.args.col_beams.map((beam: any, index: number) => {\n            return <rect x={beam[0]} y={0} height={this.props.args.height}\n                width={beam[1] - beam[0]} fill=\"red\" opacity=\"0.25\"\n                onClick={e => this.handler(\"col\", index)} strokeWidth={index == marked ? \"2\": \"0\"} stroke=\"black\"/>\n        })\n    }\n\n    public handler(type: string, index: number) {\n        this.setState(\n            prevState => ({ \"type\": type, \"index\": index }),\n            () => Streamlit.setComponentValue([type, index])\n        );\n    }\n}\n\nexport default withStreamlitConnection(ClickableImage)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ClickableImage from \"./ClickableImage\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ClickableImage />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}